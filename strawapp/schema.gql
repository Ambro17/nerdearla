type Query {
    # Attendee Endpoints: Search talks by year, topic, date or get all
    talksByYear(year: NerdearlaEdition): [Talk!]!
    talksByTopic(topic: Topic!): [Talk!]!
    nextTalks: [Talk!]!
    talks: [Talk!]!

    # Recruiter Endpoints: Search people by skills or interests
    searchPeopleBySkill(skill: String!): [Person!]!
    searchPeople(filter: PeopleFilter!): [Person!]!

    # Looking for a job
    searchOpenPositions(technologies: [String!]!): Company

    # Sponsor information
    sponsors: [Sponsor!]!

    # Meta information about nerdearla organizers, social links
    about: AboutInfo!
}

type Talk {
    name: String
    description: String
    speaker: Person
    topic: Topic
    tags: [String!]!
    youtube_link: Link!
}

interface Person {
    name: String
    surname: String
    email: String
}

type Speaker implements Person {
    job: String
    company: String
    talk: Talk
}

type Attendee implements Person {
    interests: [String!]!
    open_to_job_offers: Boolean
    resume_link: String
}

enum Topic {
    PYTHON
    GRAPHQL
    SOCIAL
}

enum NerdearlaEdition {
    2019
    2018
    2017
}

type AboutInfo {
    edition_motto: String
    organizer: String
    website: Link
    youtube_channel: Link
    facebook_page: Link
}

type Sponsor {
    company: Company
    type: SponsorType
}

type Company {
    name: String
    description: String
    website: Link
    open_positions: [OpenPosition]
    technologies: [String] 
}

type OpenPosition {
    title: String
    url: Link
}

enum SponsorType {
    EXABYTE
    PETABYTE
    TERABYTE
}
