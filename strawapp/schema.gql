input AddNewSponsorInput {
  company: CompanyInput!
  category: SponsorTypeInput!
}

type Company {
  name: String!
  tagline: String!
  website: String!
  openPositions: [OpenPosition!]!
  technologies: [String!]!
}

input CompanyInput {
  name: String!
  website: String!
  tagline: String! = ""
  technologies: [String!]!
}

type Mutation {
  addNewSponsor(input: AddNewSponsorInput!): Sponsor!
}

type OpenPosition {
  title: String!
  url: String!
  company: Company!
}

input PeopleFilter {
  interestedIn: [String!]!
  openToJobOffers: Boolean!
  seniority: Seniority!
}

interface Person {
  name: String!
  email: String!
  interests: [String!]!
  openToJobOffers: Boolean!
}

type Query {
  sponsors: [Sponsor!]!
  findPeople(filter: PeopleFilter!): [Person!]!
  findPeopleByInterest(interest: String!): [Person!]!
  findPeopleOpenToHiring: [Person!]!
  findJobOportunities: [OpenPosition!]!
  talks: [Talk!]!

  """Talks which are about to start"""
  nextTalks: [Talk!]!
  talksByYear(year: String!): [Talk!]!
  talksByTopic(topic: String!): [Talk!]!
}

enum Seniority {
  SENIOR
  SEMI_SENIOR
  JUNIOR
}

type Speaker implements Person {
  name: String!
  email: String!
  interests: [String!]!
  openToJobOffers: Boolean!
  job: String!
  talk: Talk
}

type Sponsor {
  company: Company!
  category: SponsorType!
}

enum SponsorType {
  DIAMANTE
  ORO
  PLATA
  BRONCE
}

enum SponsorTypeInput {
  DIAMANTE
  ORO
  PLATA
  BRONCE
}

type Talk {
  name: String!
  topic: Topic!
  description: String!
  year: String!
  speaker: Speaker!
}

enum Topic {
  PYTHON
  REST
  DIVERSITY
}

type Visitor implements Person {
  name: String!
  email: String!
  interests: [String!]!
  openToJobOffers: Boolean!
  resumeLink: String!
  githubProfile: String!
}