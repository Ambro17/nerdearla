type Company {
  name: String!
  description: String!
  website: String!
  openPositions: [OpenPosition!]!
  technologies: [String!]!
}

enum Edition {
  _2017
  _2018
  _2019
  _2020
}

type OpenPosition {
  title: String!
  url: String!
  company: String!
}

input PeopleFilter {
  seniority: String!
  language: String!
  salaryRange: String!
}

interface Person {
  name: String!
  email: String!
  interests: [String!]!
  openToJobOffers: Boolean!
}

type Query {
  sponsors: [Sponsor!]!
  findPeople(filter: PeopleFilter!): [Person!]!
  findPeopleByInterest(interest: String!): [Person!]!
  findPeopleOpenToHiring: [Person!]!
  findJobOportunities: [OpenPosition!]!
  talks: [Talk!]!

  """Talks which are about to start"""
  nextTalks: [Talk!]!
  talksByYear(year: String!): [Talk!]!
  talksByTopic(topic: String!): [Talk!]!
}

type Speaker implements Person {
  name: String!
  email: String!
  interests: [String!]!
  openToJobOffers: Boolean!
  job: String!
}

type Sponsor {
  company: Company!
  category: SponsorType!
}

enum SponsorType {
  EXABYTE
  PETABYTE
  TERABYTE
}

type Talk {
  name: String!
  topic: Topic!
  description: String!
  year: Edition!
  speaker: Person!
}

enum Topic {
  PYTHON
  REST
  DIVERSITY
}

type Visitor implements Person {
  name: String!
  email: String!
  interests: [String!]!
  openToJobOffers: Boolean!
  resumeLink: String!
}